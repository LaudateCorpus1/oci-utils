.\" Process this file with
.\" groff -man -Tascii oci-network-config.1
.\"
.\" Copyright (c) 2017, 2018 Oracle and/or its affiliates. All rights reserved.
.\"
.TH OCI-NETWORK-CONFIG 1 "MAY 2018" Linux "User Manuals"
.SH NAME
oci-network-config \- configure network devices on Oracle Cloud Infrastructure compute instances
.SH SYNOPSIS
.B oci-network-config [-s|--show] [-X
.I ITEM
.B | --exclude
.I ITEM
.B ] [-I
.I ITEM
.B | --include
.I ITEM
.B ] [-q|--quiet] [--help]

.B oci-network-config [-s|--show] [-a|--auto|-c|--configure] [-e
.I IP_ADDR VNIC_OCID
.B ] [-n
.I NS
.B | --ns
.I NS
.B ] [-r|--sshd] [-X
.I ITEM
.B | --exclude
.I ITEM
.B ] [-I
.I ITEM
.B | --include
.I ITEM
.B ] [-q|--quiet] [--help]

.B oci-network-config [-s|--show] [-d|--deconfigure] [-e
.I IP_ADDR VNIC_OCID
.B ] [-X
.I ITEM
.B | --exclude
.I ITEM
.B ] [-I
.I ITEM
.B | --include
.I ITEM
.B ] [-q|--quiet] [--help]

.B oci-network-config [-s|--show] [--create-vnic] [--nic-index
.I IND
.B ] [--vnic-name
.I NAME
.B ] [--detach-vnic
.I VNIC
.B ] [--add-private-ip] [--private-ip
.I ADDR
.B ] [--del-private-ip
.I ADDR
.B ] [--subnet
.I SUBNET
.B ] [--assign-public-ip] [--vnic
.I OCID
.B ] [-X
.I ITEM
.B | --exclude
.I ITEM
.B ] [-I
.I ITEM
.B | --include
.I ITEM
.B ] [-q|--quiet] [--help]

.SH DESCRIPTION

The
.B oci-network-config
utility shows the current 
Virtual interface Cards provisioned in the 
Oracle Cloud Infrastructure 
and configured on this instance. When a secondary VNIC is provisioned in Oracle Cloud Infrastructure it must be explicitly configured on the instance using this script or similar commands.

The first version of this command displays the currently provisioned VNICs and the current IP configuration for this instance. VNICs that are not yet configured are marked with '$ADD' and IP configurations that no longer have an associated VNIC are marked with '$DELETE'.

The second version, with -c (or --configure or -a or --auto), configures VNICs that do not have an IP configuration and deletes the IP configurations of VNICs that are not currently provisioned. This puts the instance IP configuration in sync with current Oracle Cloud Infrastructure provisioning.  If one or more optional -e options are present the secondary IP addresses are configured on the same interfaces as the corresponding VNIC.

The configuring interfaces can optionally be placed inside separate network namespaces. This is necessary when VNICs are in subnets (different VCNs) with overlapping address blocks and the network applications are not bound directly to interfaces. Network namespaces require applications to be launched in them explicitly (via 'ip netns exec <ns>') in order to establish association with the interface. When namespaces are not used, policy-based routing is configured to provide a default route to the secondary VNIC\'s virtual router (default gateway) when the VNIC\'s address is the source address.

Bare Metal secondary VNICs are configured using VLANs (where there is no corresponding physical interface). These will look like 2 addition interfaces when showing IP links, with names like '$MACVLAN_FORMAT' for the MAC VLAN and '$VLAN_FORMAT' for the IP VLAN.

The third version, -d (or --deconfigure), deletes all IP configuration for provisioned secondary VNICs as long as there is no -e option. If one or more optional -e options are present only the given secondary IP addresses are deconfigured and the remaining configuration is left as is.

The fourth version requires the Oracle Cloud Infrastructure Python SDK to be installed and configured.
The Oracle Cloud Infrastructure Python SDK is available in the python-oci-sdk package.  This version
allows creating a new VNIC for the instance, detaching a VNIC from the instance,
or adding/removing private IP addresses to/from an existing VNIC.

To install the Oracle Cloud Infrastructure Python SDK, use
.PP
.nf
.RS
yum install python-oci-sdk python-oci-cli
.RE
.fi
.PP
The python-oci-cli package contains the oci command line utility.  You can
use the oci utility for configuring the Oracle Cloud Infrastructure Python SDK:
.PP
.nf
.RS
oci setup config
.RE
.fi
.PP
See https://docs.us-phoenix-1.oraclecloud.com/Content/API/Concepts/sdkconfig.htm
for more information.

Another option for authorizing the use of Oracle Cloud Infrastructure services from an instance is
using Instance Principals.  The Oracle Cloud Infrastructure SDK does not need configuration on the
instance when the instance is part of a dynamic group that was granted access
to Oracle Cloud Infrastructure services.  See https://docs.us-phoenix-1.oraclecloud.com/Content/Identity/Tasks/callingservicesfrominstances.htm for further details.

When
.BR ocid(8)
is enabled, it runs this utility each time the VNIC configuration metadata of the instance changes.  It also restores the VNIC configuration after rebooting the system.  If
.BR ocid(8)
is not enabled this script must be run periodically to pick up changes in VNIC provisioning (whether adding or deleting). Note that these IP configuration changes are not persistent, the script must, at a minimum, be run on each startup.

To exclude VNICs, IP addresses or VLAN interfaces from automatic configuration use the -X (or --exclude) option.  Exclusions specified with this option are persistent so that they also apply when
.BR ocid(8)
runs this utility.  The exclusion remains in place until the VNIC/address/interface is re-included using the -I (or --include) option.

.SH OPTIONS
.IP "-s, --show"
Show information on all provisioning and interface configuration. This is the default action if no options are given.
Columns:
    CONFIG   '$ADD' indicates missing IP config,
             '$DELETE' missing VNIC, '$EXCL' excluded (-X)
    ADDR     IP address
    SPREFIX  subnet CIDR prefix
    SBITS    subnet mask bits
    VIRTRT   virutal router IP address
    NS       namespace (if any)
    IND      interface index (if BM)
    IFACE    interface (underlying physical if VLAN is also set)
    VLTAG    VLAN tag (if BM)
    VLAN     IP virtual LAN (if any)
    STATE    state of interface
    MAC      MAC address
    VNIC     VNIC object identifier
.IP "-a, --auto, -c, --configure"
Add IP configuration for VNICs that are not configured and delete for VNICs that are no longer provisioned.
.IP "-d, --deconfigure"
Deconfigure all VNICs (except the primary). If a -e option is also present only the secondary IP address(es) are deconfigured.
.IP "--create-vnic"
Create a new VNIC and attach it to this instance.  Use the --subnet option to
choose a subnet and --private-ip to choose a specific private IP address.
This option requires the Oracle Cloud Infrastructure Python SDK to be installed and configured.
.IP "--nic-index IND"
Physical NIC index. When creating a new VNIC using the --create-vnic option, assign the VNIC to this physical network interface card.
Default value is 0.
.IP "--vnic-name NAME"
When creating a new VNIC using the --create-vnic option, set the display
name and hostname of the VNIC to NAME.
.IP "--detach-vnic VNIC"
Detach and delete the VNIC with the given OCID or IP address.  The primary
VNIC cannot be detached.  Any secondary private IP addresses attached to the
VNIC are also deleted.
This option requires the Oracle Cloud Infrastructure Python SDK to be installed and configured.
.IP "--add-private-ip"
Add a secondary private IP address to an existing VNIC.  When the instance has
multiple VNICs, use the --vnic option to select the VNIC to add the secondary
private IP address to.
This option requires the Oracle Cloud Infrastructure Python SDK to be installed and configured.
.IP "--del-private-ip ADDR"
Delete the given secondary private IP.
This option requires the Oracle Cloud Infrastructure Python SDK to be installed and configured.
.IP "--private-ip ADDR"
When used with --create-vnic or --add-private-ip, assign the given private IP
address.  Without this option an unused IP address from the subnet will be
assigned automatically.
.IP "--subnet SUBNET"
When used with the --create-vnic option, connect the VNIC to the given
.B SUBNET.
The
.B SUBNET
can be an OCID or a regular expression that is matched against the display name
of all available subnets.  When --private-ip is used, the subnet is inferred
from the IP address, or it defaults to the subnet of the primary VNIC.
.IP "--assign-public-ip"
When used with the --create-vnic option, assign a public IP address to the new
VNIC.  By default only a private IP address is assigned.
.IP "--vnic OCID"
When used with the --add-private-ip option, assign the new private IP address
to the given VNIC.  This option is required when the instance has multiple
VNICs.  Use the --show option to display the OCIDs of the VNICs.
.IP "-e IP_ADDR VNIC_OCID"
Secondary private IP address to configure or deconfigure.
.IP "-n FORMAT, --ns FORMAT"
When configuring, place interfaces in namespace identified by the given format. Format can include $nic and $vltag variables. The name defaults to '$DEF_NS_FORMAT_BM' for BMs and '$DEF_NS_FORMAT_VM' for VMs. When configuring multiple VNICs ensure the namespaces are unique.
.IP "-r, --sshd"
Start sshd in namespace (if -n or --ns is present)
.IP "-X ITEM, --exclude ITEM"
Persistently exclude
.B ITEM
from automatic configuration/deconfiguration. Use the --include option to include the
.B ITEM
again.
.B ITEM
can be a VNIC OCID, an IP address or a VLAN interface name.
.IP "-I ITEM, --include ITEM"
Include an
.B ITEM
that was previously excluded using the --exclude option in automatic configuration/deconfiguration.
.IP --debug
Print diagnostic messages.
.IP --help
Print a summary of the command line options.
.SH EXAMPLES
.PP
.nf
.RS
sudo oci-network-config --add-private-ip --private-ip 10.0.1.200
.RE
.fi
.PP
Attaches and configures a new secondary private IP address, 10.0.1.200 on the
primary VNIC.  See
.BR oci-utils.conf.d(5)
for information about configuring oci-utils to work as the root user.
.PP
.nf
.RS
sudo oci-network-config --del-private-ip 10.0.1.200
.RE
.fi
.PP
Delete and de-configure the secondary private IP set up in the previous example.
.PP
.nf
.RS
sudo oci-network-config --create-vnic --assign-public-ip --subnet my-subnet --show
.RE
.fi
.PP
Create a new VNIC in the
.B my-subnet
subnet.  An unused IP address from
.B my-subnet
is assigned automatically.  A public IP address is also assigned to the VNIC.
The new network interface configuration is displayed after creating the VNIC.
.SH DIAGNOSTICS
Return an exit status of 0 for success or 1 if an error occured.
.SH "SEE ALSO"
.BR ocid (8)
.BR oci-utils.conf.d (5)
.BR sudo (8)
