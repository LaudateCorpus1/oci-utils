#!/usr/bin/env python2.7

# Copyright (c) 2017 Oracle and/or its affiliates.
#
# oci-utils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with oci-utils.  If not, see <http://www.gnu.org/licenses/>.

'''
This utility display instance metadata when run on Oracle Cloud Infrastructure
instances.  See the manual page for more information.
'''

import sys
import argparse
import urllib
try:
    import json
except ImportError:
    import simplejson as json
from oci_utils.packages.stun import get_ip_info

def parse_args():
    '''
    Parse the command line arguments and return an object representing the
    command line (as returned by argparse's parse_args())
    '''
    parser = argparse.ArgumentParser(description='Utility for displaying '
                                     'metadata for an instance running in '
                                     'the Oracle Cloud Infrastructure.',
                                     add_help=False)
    parser.add_argument('-h', '--human-readable', action='store_true',
                        help='Display human readable output (default)')
    parser.add_argument('-j', '--json', action='store_true',
                        help='Display json output')
    parser.add_argument('-g', '--get', metavar='KEY', dest='keys',
                        action='append', type=str.lower,
                        help='Display the value of a specific key')
    parser.add_argument('--help', action='help',
                        help='Display this help')

    args = parser.parse_args()
    return args

def main():
    '''
    Main program
    '''
    args = parse_args()

    external_ip = None
    if args.keys is None or 'publicip' in args.keys:
        external_ip = get_ip_info()[1]

    metadata = None
    if args.keys is None or args.keys != ['publicip']:
        oci_api_url = 'http://169.254.169.254/opc/v1/'
        try:
            api_conn = urllib.urlopen(oci_api_url + 'metadata/')
            metadata = json.loads(api_conn.read().decode())
        except IOError as e:
            sys.stderr.write("Error connecting to metadata server: %s\n" % e[1])
            sys.exit(1)

    if metadata is not None:
        for key in metadata.keys():
            print "%s: %s" % (key, data[key])

    if external_ip is not None:
        if args.json:
            print json.dumps({ 'publicIp': external_ip })
        else:
            print "Public IP address: %s" % external_ip

        return 0
    else:
        sys.stderr.write("Failed to determine public IP address.\n")
        return 1

sys.exit(main())

